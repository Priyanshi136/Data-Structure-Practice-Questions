public class Solution {
    public static int search(int arr[], int key) {
        // Write your code here
        int pivot = pivot(arr, 0, arr.length-1);
        if(pivot == -1){
            return binarySearch(arr, 0, arr.length-1, key);
        }
        
        if(arr[pivot] == key){
            return pivot;
        }
        if(arr[0] <= key){
            return binarySearch(arr, 0, pivot-1, key);
        }
        return binarySearch(arr, pivot+1, arr.length-1, key);
    }
    public static int binarySearch(int arr[], int low, int high, int key){
        
        if(low > high){
            return -1;
        }
        
        int mid = (high+low)/2;
        if(arr[mid] == key){
            return mid;
        }else if(arr[mid] > key){
            return binarySearch(arr, low, mid-1, key);
        }else{
            return binarySearch(arr, mid+1, high, key);
        }
        
    }
    public static int pivot(int arr[], int low, int high){
        
        if(high < low){
            return -1;
        }
        if(high == low){
            return low;
        }
        
        int mid = (high+low)/2;
        if(mid < high && arr[mid] > arr[mid+1]){
            return mid;
        }
        if(mid > low && arr[mid] < arr[mid-1]){
            return mid-1;
        }
        if(arr[low] >= arr[mid]){
            return pivot(arr, low, mid-1);
        }
        return pivot(arr, mid+1, high);
    }
}
